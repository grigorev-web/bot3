/**
 * @fileoverview –ü—Ä–æ—Å—Ç–æ–π —Ä–æ—É—Ç–µ—Ä —Å LLM
 * @description –°–æ–∑–¥–∞–µ—Ç LLM —Å–µ—Ä–≤–∏—Å, –¥–µ–ª–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç–≤–µ—Ç
 * @author Telegram Bot Team
 * @version 4.0.0
 * @since 2024-01-01
 */

/**
 * @class SimpleRouter
 * @description –ü—Ä–æ—Å—Ç–æ–π —Ä–æ—É—Ç–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç LLM –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
 * @example
 * const router = new SimpleRouter();
 * const response = await router.processText('–ü—Ä–∏–≤–µ—Ç');
 */
class SimpleRouter {
  /**
   * @constructor
   */
  constructor() {
    this.llmService = null;
    console.log('üîß SimpleRouter –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
  }

  /**
   * @group Text Processing
   * @description –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ LLM
   * @param {string} text - –¢–µ–∫—Å—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
   * @returns {Promise<string>} –û—Ç–≤–µ—Ç –æ—Ç LLM
   */
  async processText(text) {
    try {
      if (!text || typeof text !== 'string') {
        throw new Error('–¢–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ–ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–æ–π');
      }

      console.log(`üìù –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ç–µ–∫—Å—Ç —á–µ—Ä–µ–∑ LLM: "${text}"`);
      
      // –°–æ–∑–¥–∞–µ–º LLM —Å–µ—Ä–≤–∏—Å –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
      if (!this.llmService) {
        this.llmService = await this.createLLMService();
      }
      
      if (this.llmService) {
        // –î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫ LLM
        const response = await this.llmService.generateResponse(text);
        if (response && response.content) {
          console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç LLM');
          return response.content;
        }
      }
      
      // Fallback –µ—Å–ª–∏ LLM –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
      console.log('‚ö†Ô∏è LLM –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É—é fallback');
      return this.getDefaultResponse(text);
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞:', error);
      return this.getErrorResponse(error);
    }
  }

  /**
   * @group LLM Service Creation
   * @description –°–æ–∑–¥–∞–µ—Ç LLM —Å–µ—Ä–≤–∏—Å
   * @returns {Promise<Object|null>} LLM —Å–µ—Ä–≤–∏—Å –∏–ª–∏ null –µ—Å–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
   * @private
   */
  async createLLMService() {
    try {
      console.log('üöÄ –°–æ–∑–¥–∞—é LLM —Å–µ—Ä–≤–∏—Å...');
      
      // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º LLM —Å–µ—Ä–≤–∏—Å
      const { LLMService } = require('../../services');
      
      // –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å
      const service = new LLMService();
      
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å
      await service.initialize();
      
      console.log('‚úÖ LLM —Å–µ—Ä–≤–∏—Å —Å–æ–∑–¥–∞–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');
      return service;
      
    } catch (error) {
      console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å LLM —Å–µ—Ä–≤–∏—Å:', error.message);
      return null;
    }
  }

  /**
   * @group Fallback Responses
   * @description –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –µ—Å–ª–∏ LLM –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
   * @param {string} text - –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   * @returns {string} –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç
   * @private
   */
  getDefaultResponse(text) {
    return `üìù –í—ã –Ω–∞–ø–∏—Å–∞–ª–∏: "${text}"\n\nüí° LLM —Å–µ—Ä–≤–∏—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.`;
  }

  /**
   * @group Error Handling
   * @description –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –æ–± –æ—à–∏–±–∫–µ
   * @param {Error} error - –û–±—ä–µ–∫—Ç –æ—à–∏–±–∫–∏
   * @returns {string} –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
   * @private
   */
  getErrorResponse(error) {
    return `‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:\nüîç ${error.message}\n\nüí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.`;
  }

  /**
   * @group Accessors
   * @description –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å —Ä–æ—É—Ç–µ—Ä–∞ –∫ —Ä–∞–±–æ—Ç–µ
   * @returns {boolean} true –µ—Å–ª–∏ —Ä–æ—É—Ç–µ—Ä –≥–æ—Ç–æ–≤, false –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
   */
  isReady() {
    return this.llmService !== null;
  }

  /**
   * @group Accessors
   * @description –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–æ—É—Ç–µ—Ä–µ
   * @returns {Object} –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–æ—É—Ç–µ—Ä–µ
   */
  getInfo() {
    return {
      name: 'Simple Router with LLM',
      version: '4.0.0',
      isReady: this.isReady(),
      hasLLM: !!this.llmService
    };
  }
}

module.exports = SimpleRouter;
