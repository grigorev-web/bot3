/**
 * @fileoverview –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π Telegram –±–æ—Ç–∞
 * @description –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ –ø—Ä–æ—Å—Ç–æ–π —Ä–æ—É—Ç–µ—Ä
 * @author Telegram Bot Team
 * @version 3.0.0
 * @since 2024-01-01
 */

/**
 * @typedef {Object} TextMessage
 * @property {number} chat.id - ID —á–∞—Ç–∞
 * @property {string} text - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 * @property {Object} from - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ
 */

/**
 * @class TextMessageHandler
 * @description –ü—Ä–æ—Å—Ç–æ–π –∫–ª–∞—Å—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —á–µ—Ä–µ–∑ —Ä–æ—É—Ç–µ—Ä
 * @example
 * const textHandler = new TextMessageHandler(bot);
 * if (textHandler.canHandle(message)) {
 *   textHandler.handleTextMessage(message);
 * }
 */
class TextMessageHandler {
  /**
   * @constructor
   * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä Telegram –±–æ—Ç–∞
   * @throws {Error} –ï—Å–ª–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω
   */
  constructor(bot) {
    if (!bot) {
      throw new Error('–≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è TextMessageHandler');
    }
    
    this.bot = bot;
    this.router = null; // –õ–µ–Ω–∏–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Ä–æ—É—Ç–µ—Ä–∞
    
    console.log('üîß TextMessageHandler –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
  }

  /**
   * @group Message Processing
   * @description –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   * @param {TextMessage} msg - –û–±—ä–µ–∫—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
   * @returns {Promise<boolean>} true –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ, false –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
   */
  async handleTextMessage(msg) {
    try {
      const chatId = msg.chat.id;
      const text = msg.text;
      
      console.log(`üìù –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —á–∞—Ç–∞ ${chatId}: "${text}"`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–æ–π
      if (this.isCommand(text)) {
        console.log('‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ —è–≤–ª—è–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–æ–π, –ø—Ä–æ–ø—É—Å–∫–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É');
        return false;
      }
      
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç —á–µ—Ä–µ–∑ —Ä–æ—É—Ç–µ—Ä (–ª–µ–Ω–∏–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞)
      const response = await this.processTextWithRouter(text);
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      await this.sendResponse(chatId, response);
      
      console.log(`‚úÖ –¢–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –¥–ª—è —á–∞—Ç–∞ ${chatId}`);
      return true;
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
      await this.sendErrorMessage(msg.chat.id);
      return false;
    }
  }

  /**
   * @group Message Validation
   * @description –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –º–æ–∂–µ—Ç –ª–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –¥–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
   * @param {Object} msg - –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç Telegram
   * @returns {boolean} true –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –º–æ–∂–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å, false –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
   */
  canHandle(msg) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏ —á—Ç–æ —ç—Ç–æ –Ω–µ –∫–æ–º–∞–Ω–¥–∞
    return msg.text && !this.isCommand(msg.text);
  }

  /**
   * @group Message Validation
   * @description –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—Å—Ç –∫–æ–º–∞–Ω–¥–æ–π
   * @param {string} text - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
   * @returns {boolean} true –µ—Å–ª–∏ —ç—Ç–æ –∫–æ–º–∞–Ω–¥–∞, false –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
   * @private
   */
  isCommand(text) {
    return text.startsWith('/');
  }

  /**
   * @group Text Processing
   * @description –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç —á–µ—Ä–µ–∑ —Ä–æ—É—Ç–µ—Ä (–ª–µ–Ω–∏–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞)
   * @param {string} text - –¢–µ–∫—Å—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
   * @returns {Promise<string>} –û—Ç–≤–µ—Ç –æ—Ç —Ä–æ—É—Ç–µ—Ä–∞
   * @private
   */
  async processTextWithRouter(text) {
    try {
      // –õ–µ–Ω–∏–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Ä–æ—É—Ç–µ—Ä–∞
      if (!this.router) {
        this.router = await this.createRouter();
      }
      
      if (this.router) {
        // –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç —Ä–æ—É—Ç–µ—Ä–∞
        const response = await this.router.processText(text);
        if (response) {
          return response;
        }
      }
      
      // Fallback –æ—Ç–≤–µ—Ç –µ—Å–ª–∏ —Ä–æ—É—Ç–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
      return this.getDefaultResponse(text);
      
    } catch (error) {
      console.warn('‚ö†Ô∏è –†–æ—É—Ç–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É—é fallback:', error.message);
      return this.getDefaultResponse(text);
    }
  }

  /**
   * @group Router Creation
   * @description –°–æ–∑–¥–∞–µ—Ç —Ä–æ—É—Ç–µ—Ä –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
   * @returns {Promise<Object|null>} –†–æ—É—Ç–µ—Ä –∏–ª–∏ null –µ—Å–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
   * @private
   */
  async createRouter() {
    try {
      console.log('üöÄ –°–æ–∑–¥–∞—é —Ä–æ—É—Ç–µ—Ä...');
      
      // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä
      const { SimpleRouter } = require('../modules/router');
      
      // –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä
      const router = new SimpleRouter();
      
      console.log('‚úÖ –†–æ—É—Ç–µ—Ä —Å–æ–∑–¥–∞–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');
      return router;
      
    } catch (error) {
      console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ä–æ—É—Ç–µ—Ä:', error.message);
      return null;
    }
  }

  /**
   * @group Response Handling
   * @description –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
   * @param {number} chatId - ID —á–∞—Ç–∞
   * @param {string} response - –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞
   * @returns {Promise<void>}
   * @private
   */
  async sendResponse(chatId, response) {
    try {
      await this.bot.sendMessage(chatId, response, {
        parse_mode: 'HTML',
        disable_web_page_preview: true
      });
      
      console.log(`üì§ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —á–∞—Ç ${chatId}`);
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞:', error);
      throw error;
    }
  }

  /**
   * @group Error Handling
   * @description –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
   * @param {number} chatId - ID —á–∞—Ç–∞
   * @returns {Promise<void>}
   * @private
   */
  async sendErrorMessage(chatId) {
    try {
      const errorMessage = '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.';
      await this.bot.sendMessage(chatId, errorMessage);
    } catch (sendError) {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ:', sendError);
    }
  }

  /**
   * @group Fallback Responses
   * @description –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –µ—Å–ª–∏ —Ä–æ—É—Ç–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
   * @param {string} text - –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   * @returns {string} –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç
   * @private
   */
  getDefaultResponse(text) {
    // –ü—Ä–æ—Å—Ç—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –±–µ–∑ —Ä–æ—É—Ç–µ—Ä–∞
    if (/(–ø—Ä–∏–≤–µ—Ç|–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π|hi|hello)/i.test(text)) {
      return '–ü—Ä–∏–≤–µ—Ç! üëã –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?';
    }
    
    if (/(–∫–∞–∫ –¥–µ–ª–∞|–∫–∞–∫ —Ç—ã|how are you)/i.test(text)) {
      return '–°–ø–∞—Å–∏–±–æ, —É –º–µ–Ω—è –≤—Å–µ —Ö–æ—Ä–æ—à–æ! üòä –ê —É –≤–∞—Å –∫–∞–∫ –¥–µ–ª–∞?';
    }
    
    if (/(—Å–ø–∞—Å–∏–±–æ|–±–ª–∞–≥–æ–¥–∞—Ä—é|thanks)/i.test(text)) {
      return '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞! –†–∞–¥ –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω—ã–º! üôè';
    }
    
    return '–ü–æ–ª—É—á–∏–ª –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ! üìù –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ.';
  }

  /**
   * @group Accessors
   * @description –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–¥—É–ª–µ
   * @returns {Object} –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–¥—É–ª–µ
   */
  getModuleInfo() {
    return {
      name: 'Text Message Handler',
      version: '3.0.0',
      hasRouter: !!this.router,
      routerStatus: this.router ? 'ready' : 'not_loaded'
    };
  }

  /**
   * @group Accessors
   * @description –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ–±—Ä–∞–±–æ—Ç–∫–∏
   * @returns {Object} –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
   */
  getStats() {
    return {
      hasRouter: !!this.router,
      routerStatus: this.router ? 'ready' : 'not_loaded'
    };
  }
}

module.exports = TextMessageHandler;
