/**
 * @fileoverview –£–º–Ω—ã–π —Ä–æ—É—Ç–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏–π —Å LLM –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–µ–π
 * @description –ö–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä—É–µ—Ç –∏ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é LLM –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ —Å–ø–æ—Å–æ–±–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏
 * @author Telegram Bot Team
 * @version 2.0.0
 * @since 2024-01-01
 * @requires ../services/llm/llmService
 * @requires ../classifier/messageClassifier
 */

const LLMService = require('../../services/llm/llmService');
const MessageClassifier = require('../classifier/messageClassifier');

/**
 * @typedef {Object} RouteRule
 * @property {string} id - –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø—Ä–∞–≤–∏–ª–∞
 * @property {string|RegExp} pattern - –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è
 * @property {Function} handler - –§—É–Ω–∫—Ü–∏—è-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫
 * @property {string} description - –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞
 * @property {number} priority - –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –ø—Ä–∞–≤–∏–ª–∞ (1-10)
 * @property {string} category - –ö–∞—Ç–µ–≥–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
 * @property {Object} metadata - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
 */

/**
 * @typedef {Object} RouterStats
 * @property {number} totalRequests - –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤
 * @property {number} classifiedRequests - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
 * @property {number} fallbackRequests - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ —Å fallback
 * @property {Object} categoryStats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
 * @property {Date} lastRequest - –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
 */

/**
 * @class SmartRouter
 * @description –£–º–Ω—ã–π —Ä–æ—É—Ç–µ—Ä, –∏—Å–ø–æ–ª—å–∑—É—é—â–∏–π LLM –¥–ª—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
 * @example
 * const router = new SmartRouter(llmConfig);
 * await router.initialize();
 * const response = await router.processText('–ü—Ä–∏–≤–µ—Ç, –∫–∞–∫ –¥–µ–ª–∞?');
 */
class SmartRouter {
  /**
   * @constructor
   * @param {Object} llmConfig - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è LLM —Å–µ—Ä–≤–∏—Å–∞
   * @param {Object} [options] - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏
   * @throws {Error} –ï—Å–ª–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è LLM –Ω–µ–≤–µ—Ä–Ω–∞
   */
  constructor(llmConfig, options = {}) {
    this.name = 'Smart Router Module';
    this.version = '2.0.0';
    this.options = {
      enableLLMClassification: true,
      fallbackToPatterns: true,
      confidenceThreshold: 0.7,
      ...options
    };
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º LLM —Å–µ—Ä–≤–∏—Å
    this.llmService = new LLMService(llmConfig);
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä
    this.classifier = new MessageClassifier(this.llmService);
    
    // –ü—Ä–∞–≤–∏–ª–∞ —Ä–æ—É—Ç–∏–Ω–≥–∞
    this.routes = [];
    this.stats = this.initializeStats();
    
    console.log('üîß SmartRouter –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
  }

  /**
   * @group Statistics Initialization
   * @description –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–æ—É—Ç–µ—Ä–∞
   * @returns {RouterStats} –ù–∞—á–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
   * @private
   */
  initializeStats() {
    return {
      totalRequests: 0,
      classifiedRequests: 0,
      fallbackRequests: 0,
      categoryStats: {},
      lastRequest: null
    };
  }

  /**
   * @group Initialization
   * @description –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ä–æ—É—Ç–µ—Ä –∏ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º—ã–µ —Å–µ—Ä–≤–∏—Å—ã
   * @returns {Promise<boolean>} true –µ—Å–ª–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞
   */
  async initialize() {
    try {
      console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è SmartRouter...');
      
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º LLM —Å–µ—Ä–≤–∏—Å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–∞ LLM –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è
      if (this.options.enableLLMClassification) {
        try {
          await this.llmService.initialize();
          await this.classifier.initialize();
          console.log('‚úÖ LLM —Å–µ—Ä–≤–∏—Å –∏ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
        } catch (llmError) {
          console.warn('‚ö†Ô∏è LLM –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å, –æ—Ç–∫–ª—é—á–∞—é LLM –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—é:', llmError.message);
          this.options.enableLLMClassification = false;
        }
      } else {
        console.log('‚ÑπÔ∏è LLM –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ –ø–∞—Ç—Ç–µ—Ä–Ω-–º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—é');
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–µ –ø—Ä–∞–≤–∏–ª–∞
      this.initializeDefaultRoutes();
      
      console.log(`‚úÖ SmartRouter —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. –ü—Ä–∞–≤–∏–ª: ${this.routes.length}, LLM: ${this.options.enableLLMClassification}`);
      console.log(`üîç Router isReady after init: ${this.isReady()}`);
      
      return true;
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ SmartRouter:', error);
      throw error;
    }
  }

  /**
   * @group Default Routes
   * @description –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –±–∞–∑–æ–≤—ã–µ –ø—Ä–∞–≤–∏–ª–∞ —Ä–æ—É—Ç–∏–Ω–≥–∞
   * @private
   */
  initializeDefaultRoutes() {
    console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö –ø—Ä–∞–≤–∏–ª —Ä–æ—É—Ç–∏–Ω–≥–∞...');
    
    // –ü—Ä–∞–≤–∏–ª–æ –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–π
    this.addRoute({
      id: 'greeting',
      pattern: /(–ø—Ä–∏–≤–µ—Ç|–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π|hi|hello)/i,
      handler: (text) => this.generateGreetingResponse(text),
      description: '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ',
      priority: 1,
      category: 'greeting'
    });

    // –ü—Ä–∞–≤–∏–ª–æ –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤
    this.addRoute({
      id: 'question',
      pattern: /(–∫–∞–∫ –¥–µ–ª–∞|–∫–∞–∫ —Ç—ã|–∫–∞–∫ –∂–∏–∑–Ω—å|how are you)/i,
      handler: (text) => this.generateStatusResponse(text),
      description: '–í–æ–ø—Ä–æ—Å –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏',
      priority: 2,
      category: 'question'
    });

    // –ü—Ä–∞–≤–∏–ª–æ –¥–ª—è –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏
    this.addRoute({
      id: 'thanks',
      pattern: /(—Å–ø–∞—Å–∏–±–æ|–±–ª–∞–≥–æ–¥–∞—Ä—é|thanks|thank you)/i,
      handler: (text) => this.generateThanksResponse(text),
      description: '–ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å',
      priority: 1,
      category: 'feedback'
    });

    console.log(`‚úÖ –ë–∞–∑–æ–≤—ã–µ –ø—Ä–∞–≤–∏–ª–∞ —Ä–æ—É—Ç–∏–Ω–≥–∞ –¥–æ–±–∞–≤–ª–µ–Ω—ã. –í—Å–µ–≥–æ –ø—Ä–∞–≤–∏–ª: ${this.routes.length}`);
  }

  /**
   * @group Route Management
   * @description –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ–µ –ø—Ä–∞–≤–∏–ª–æ —Ä–æ—É—Ç–∏–Ω–≥–∞
   * @param {RouteRule} route - –ü—Ä–∞–≤–∏–ª–æ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
   */
  addRoute(route) {
    if (!route.id || !route.handler || typeof route.handler !== 'function') {
      throw new Error('–ü—Ä–∞–≤–∏–ª–æ –¥–æ–ª–∂–Ω–æ –∏–º–µ—Ç—å id –∏ handler —Ñ—É–Ω–∫—Ü–∏—é');
    }

    const newRoute = {
      id: route.id,
      pattern: route.pattern,
      handler: route.handler,
      description: route.description || '–ù–µ–æ–ø–∏—Å–∞–Ω–Ω–æ–µ –ø—Ä–∞–≤–∏–ª–æ',
      priority: route.priority || 0,
      category: route.category || 'general',
      metadata: route.metadata || {},
      createdAt: new Date()
    };

    this.routes.push(newRoute);
    
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø—Ä–∞–≤–∏–ª–∞ –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É (–≤—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç —Å–Ω–∞—á–∞–ª–∞)
    this.routes.sort((a, b) => b.priority - a.priority);
    
    console.log(`‚úÖ –ü—Ä–∞–≤–∏–ª–æ "${newRoute.description}" –¥–æ–±–∞–≤–ª–µ–Ω–æ —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º ${newRoute.priority}`);
  }

  /**
   * @group Text Processing
   * @description –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ —É–º–Ω—É—é –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—é
   * @param {string} text - –¢–µ–∫—Å—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
   * @param {Object} [context] - –ö–æ–Ω—Ç–µ–∫—Å—Ç —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
   * @returns {Promise<string>} –û—Ç–≤–µ—Ç –æ—Ç –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
   */
  async processText(text, context = {}) {
    try {
      if (!text || typeof text !== 'string') {
        throw new Error('–¢–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ–ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–æ–π');
      }

      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
      this.updateStats();
      
      console.log(`üìù –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ç–µ–∫—Å—Ç: "${text}"`);
      
      let response = null;
      
      // –ü—ã—Ç–∞–µ–º—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å LLM –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—é
      if (this.options.enableLLMClassification && this.classifier && typeof this.classifier.isReady === 'function' && this.classifier.isReady()) {
        try {
          response = await this.processWithLLMClassification(text, context);
          if (response) {
            this.stats.classifiedRequests++;
            console.log('‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ —á–µ—Ä–µ–∑ LLM –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—é');
            return response;
          }
        } catch (error) {
          console.warn('‚ö†Ô∏è LLM –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å, –∏—Å–ø–æ–ª—å–∑—É—é fallback:', error.message);
        }
      }
      
      // Fallback –Ω–∞ –ø–∞—Ç—Ç–µ—Ä–Ω-–º–∞—Ç—á–∏–Ω–≥
      if (this.options.fallbackToPatterns) {
        response = await this.processWithPatternMatching(text);
        if (response) {
          this.stats.fallbackRequests++;
          console.log('‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ —á–µ—Ä–µ–∑ –ø–∞—Ç—Ç–µ—Ä–Ω-–º–∞—Ç—á–∏–Ω–≥');
          return response;
        }
      }
      
      // –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–¥–æ—à–ª–æ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      console.log('‚ö†Ô∏è –ü–æ–¥—Ö–æ–¥—è—â–µ–µ –ø—Ä–∞–≤–∏–ª–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É—é –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é');
      return this.getDefaultResponse(text);
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞:', error);
      return this.getErrorResponse(error);
    }
  }

  /**
   * @group LLM Classification Processing
   * @description –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç —Å –ø–æ–º–æ—â—å—é LLM –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏
   * @param {string} text - –¢–µ–∫—Å—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
   * @param {Object} context - –ö–æ–Ω—Ç–µ–∫—Å—Ç —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
   * @returns {Promise<string|null>} –û—Ç–≤–µ—Ç –∏–ª–∏ null –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω
   * @private
   */
  async processWithLLMClassification(text, context) {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞
      if (!this.classifier || typeof this.classifier.classifyMessage !== 'function') {
        console.warn('‚ö†Ô∏è –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è LLM –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏');
        return null;
      }
      
      // –ö–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
      const classification = await this.classifier.classifyMessage(text, context);
      
      console.log(`üîç LLM –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è: ${classification.categoryName} (—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ${classification.confidence})`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏
      if (classification.confidence < this.options.confidenceThreshold) {
        console.log(`‚ö†Ô∏è –ù–∏–∑–∫–∞—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏: ${classification.confidence}`);
        return null;
      }
      
      // –ò—â–µ–º –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –ø—Ä–∞–≤–∏–ª–æ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
      const matchingRoute = this.routes.find(route => 
        route.category === classification.categoryId
      );
      
      if (matchingRoute) {
        console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø—Ä–∞–≤–∏–ª–æ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ${matchingRoute.description}`);
        return await this.executeHandler(matchingRoute, text);
      }
      
      return null;
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ LLM –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏:', error);
      return null;
    }
  }

  /**
   * @group Pattern Matching Processing
   * @description –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç —Å –ø–æ–º–æ—â—å—é –ø–∞—Ç—Ç–µ—Ä–Ω-–º–∞—Ç—á–∏–Ω–≥–∞
   * @param {string} text - –¢–µ–∫—Å—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
   * @returns {Promise<string|null>} –û—Ç–≤–µ—Ç –∏–ª–∏ null –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω
   * @private
   */
  async processWithPatternMatching(text) {
    try {
      // –ò—â–µ–º –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –ø—Ä–∞–≤–∏–ª–æ –ø–æ –ø–∞—Ç—Ç–µ—Ä–Ω—É
      const matchingRoute = this.routes.find(route => 
        this.matchesPattern(route.pattern, text)
      );
      
      if (matchingRoute) {
        console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø—Ä–∞–≤–∏–ª–æ –ø–æ –ø–∞—Ç—Ç–µ—Ä–Ω—É: ${matchingRoute.description}`);
        return await this.executeHandler(matchingRoute, text);
      }
      
      return null;
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ç—Ç–µ—Ä–Ω-–º–∞—Ç—á–∏–Ω–≥–∞:', error);
      return null;
    }
  }

  /**
   * @group Pattern Matching
   * @description –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–µ–∫—Å—Ç –ø–∞—Ç—Ç–µ—Ä–Ω—É
   * @param {string|RegExp} pattern - –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
   * @param {string} text - –¢–µ–∫—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
   * @returns {boolean} true –µ—Å–ª–∏ —Ç–µ–∫—Å—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–∞—Ç—Ç–µ—Ä–Ω—É
   * @private
   */
  matchesPattern(pattern, text) {
    if (pattern instanceof RegExp) {
      return pattern.test(text);
    } else if (typeof pattern === 'string') {
      return text.toLowerCase().includes(pattern.toLowerCase());
    }
    return false;
  }

  /**
   * @group Handler Execution
   * @description –í—ã–ø–æ–ª–Ω—è–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–∞–≤–∏–ª–∞
   * @param {RouteRule} route - –ü—Ä–∞–≤–∏–ª–æ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
   * @param {string} text - –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
   * @returns {Promise<string>} –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏
   * @private
   */
  async executeHandler(route, text) {
    try {
      const result = await route.handler(text);
      
      if (typeof result === 'string') {
        return result;
      } else if (result && typeof result === 'object') {
        return JSON.stringify(result);
      } else {
        return String(result);
      }
      
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ "${route.description}":`, error);
      throw error;
    }
  }

  /**
   * @group Response Generation
   * @description –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
   * @param {string} text - –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
   * @returns {string} –û—Ç–≤–µ—Ç –Ω–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
   * @private
   */
  generateGreetingResponse(text) {
    const greetings = [
      '–ü—Ä–∏–≤–µ—Ç! üëã –ö–∞–∫ –¥–µ–ª–∞?',
      '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! üòä –†–∞–¥ –≤–∞—Å –≤–∏–¥–µ—Ç—å!',
      '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! üéâ –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?',
      '–î–æ–±—Ä—ã–π –¥–µ–Ω—å! ‚òÄÔ∏è –ö–∞–∫ –≤–∞—à–∏ –¥–µ–ª–∞?'
    ];
    
    return greetings[Math.floor(Math.random() * greetings.length)];
  }

  /**
   * @group Response Generation
   * @description –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
   * @param {string} text - –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
   * @returns {string} –û—Ç–≤–µ—Ç –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
   * @private
   */
  generateStatusResponse(text) {
    const responses = [
      '–£ –º–µ–Ω—è –≤—Å–µ –æ—Ç–ª–∏—á–Ω–æ! üòä –°–ø–∞—Å–∏–±–æ, —á—Ç–æ —Å–ø—Ä–æ—Å–∏–ª–∏!',
      '–í—Å–µ —Ö–æ—Ä–æ—à–æ! üöÄ –ì–æ—Ç–æ–≤ –ø–æ–º–æ–≥–∞—Ç—å –∏ –æ–±—â–∞—Ç—å—Å—è!',
      '–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ! ‚ú® –ö–∞–∫ —É –≤–∞—Å –¥–µ–ª–∞?',
      '–û—Ç–ª–∏—á–Ω–æ! üåü –†–∞–±–æ—Ç–∞—é –±–µ–∑ —Å–±–æ–µ–≤!'
    ];
    
    return responses[Math.floor(Math.random() * responses.length)];
  }

  /**
   * @group Response Generation
   * @description –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å
   * @param {string} text - –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
   * @returns {string} –û—Ç–≤–µ—Ç –Ω–∞ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å
   * @private
   */
  generateThanksResponse(text) {
    const responses = [
      '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞! üòä –†–∞–¥ –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω—ã–º!',
      '–ù–µ –∑–∞ —á—Ç–æ! üåü –í—Å–µ–≥–¥–∞ –∫ –≤–∞—à–∏–º —É—Å–ª—É–≥–∞–º!',
      '–û–±—Ä–∞—â–∞–π—Ç–µ—Å—å! üéØ –ë—É–¥—É —Ä–∞–¥ –ø–æ–º–æ—á—å —Å–Ω–æ–≤–∞!',
      '–†–∞–¥ —Å—Ç–∞—Ä–∞—Ç—å—Å—è! ‚ú® –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ!'
    ];
    
    return responses[Math.floor(Math.random() * responses.length)];
  }

  /**
   * @group Fallback Responses
   * @description –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –µ—Å–ª–∏ —Ä–æ—É—Ç–µ—Ä –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª
   * @param {string} text - –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   * @returns {string} –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç
   * @private
   */
  getDefaultResponse(text) {
    return `üìù –í—ã –Ω–∞–ø–∏—Å–∞–ª–∏: "<b>${this.escapeHtml(text)}</b>"\n\n` +
           `üí° –≠—Ç–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç —É–º–Ω–æ–≥–æ —Ä–æ—É—Ç–µ—Ä–∞. ` +
           `–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.`;
  }

  /**
   * @group Error Handling
   * @description –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –æ–± –æ—à–∏–±–∫–µ
   * @param {Error} error - –û–±—ä–µ–∫—Ç –æ—à–∏–±–∫–∏
   * @returns {string} –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
   * @private
   */
  getErrorResponse(error) {
    return `‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:\n` +
           `üîç ${error.message}\n\n` +
           `üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.`;
  }

  /**
   * @group Utility Methods
   * @description –≠–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç HTML-—Å–∏–º–≤–æ–ª—ã –≤ —Ç–µ–∫—Å—Ç–µ
   * @param {string} text - –¢–µ–∫—Å—Ç –¥–ª—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
   * @returns {string} –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
   * @private
   */
  escapeHtml(text) {
    const htmlEscapes = {
      '&': '&amp;',
      '<': '&lt;',
      '>': '&gt;',
      '"': '&quot;',
      "'": '&#39;'
    };
    
    return text.replace(/[&<>"']/g, match => htmlEscapes[match]);
  }

  /**
   * @group Statistics Management
   * @description –û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–æ—É—Ç–µ—Ä–∞
   * @private
   */
  updateStats() {
    this.stats.totalRequests++;
    this.stats.lastRequest = new Date();
  }

  /**
   * @group Accessors
   * @description –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å —Ä–æ—É—Ç–µ—Ä–∞ –∫ —Ä–∞–±–æ—Ç–µ
   * @returns {boolean} true –µ—Å–ª–∏ —Ä–æ—É—Ç–µ—Ä –≥–æ—Ç–æ–≤, false –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
   */
  isReady() {
    // –†–æ—É—Ç–µ—Ä –≥–æ—Ç–æ–≤ –µ—Å–ª–∏ –µ—Å—Ç—å –±–∞–∑–æ–≤—ã–µ –ø—Ä–∞–≤–∏–ª–∞
    const hasRoutes = this.routes.length > 0;
    
    // –ï—Å–ª–∏ LLM –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞, —Ä–æ—É—Ç–µ—Ä –≥–æ—Ç–æ–≤
    if (!this.options.enableLLMClassification) {
      console.log(`üîç Router isReady: hasRoutes=${hasRoutes}, LLM disabled`);
      return hasRoutes;
    }
    
    // –ï—Å–ª–∏ LLM –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –≤–∫–ª—é—á–µ–Ω–∞, –ø—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    const llmReady = this.llmService && this.llmService.isReady();
    const classifierReady = this.classifier && typeof this.classifier.isReady === 'function' && this.classifier.isReady();
    
    console.log(`üîç Router isReady: hasRoutes=${hasRoutes}, llmReady=${llmReady}, classifierReady=${classifierReady}`);
    
    // –†–æ—É—Ç–µ—Ä –≥–æ—Ç–æ–≤ –µ—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –∏ –ª–∏–±–æ LLM –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–±—É–¥–µ—Ç fallback), –ª–∏–±–æ –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –≥–æ—Ç–æ–≤—ã
    const result = hasRoutes && (llmReady || !this.options.enableLLMClassification);
    console.log(`üîç Router isReady result: ${result}`);
    
    return result;
  }

  /**
   * @group Accessors
   * @description –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–æ—É—Ç–µ—Ä–µ
   * @returns {Object} –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–æ—É—Ç–µ—Ä–µ
   */
  getInfo() {
    return {
      name: this.name,
      version: this.version,
      isReady: this.isReady(),
      options: this.options,
      routesCount: this.routes.length,
      stats: this.stats
    };
  }

  /**
   * @group Accessors
   * @description –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–æ—É—Ç–µ—Ä–∞
   * @returns {RouterStats} –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–æ—É—Ç–µ—Ä–∞
   */
  getStats() {
    return { ...this.stats };
  }

  /**
   * @group Accessors
   * @description –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–∞–≤–∏–ª
   * @returns {Array<RouteRule>} –ú–∞—Å—Å–∏–≤ –ø—Ä–∞–≤–∏–ª
   */
  getRoutes() {
    return this.routes.map(route => ({
      ...route,
      createdAt: route.createdAt.toISOString()
    }));
  }

  /**
   * @group Accessors
   * @description –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∞–≤–∏–ª
   * @returns {number} –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∞–≤–∏–ª
   */
  getRoutesCount() {
    return this.routes.length;
  }

  /**
   * @group Accessors
   * @description –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä–µ
   * @returns {Object} –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä–µ
   */
  getClassifierInfo() {
    return this.classifier.getInfo();
  }

  /**
   * @group Accessors
   * @description –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ LLM —Å–µ—Ä–≤–∏—Å–µ
   * @returns {Object} –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ LLM —Å–µ—Ä–≤–∏—Å–µ
   */
  getLLMInfo() {
    return this.llmService.getInfo();
  }

  /**
   * @group Accessors
   * @description –û—á–∏—â–∞–µ—Ç –≤—Å–µ –ø—Ä–∞–≤–∏–ª–∞ —Ä–æ—É—Ç–∏–Ω–≥–∞
   */
  clearRoutes() {
    this.routes = [];
    console.log('üóëÔ∏è –í—Å–µ –ø—Ä–∞–≤–∏–ª–∞ —Ä–æ—É—Ç–∏–Ω–≥–∞ –æ—á–∏—â–µ–Ω—ã');
  }
}

module.exports = SmartRouter;
