/**
 * @fileoverview –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π Telegram –±–æ—Ç–∞
 * @description –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —É–º–Ω–æ–≥–æ —Ä–æ—É—Ç–µ—Ä–∞ –∏ LLM –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏
 * @author Telegram Bot Team
 * @version 2.0.0
 * @since 2024-01-01
 * @requires ../modules
 * @requires ../config/llm
 */

const { SmartRouter } = require('../modules');
const llmConfig = require('../config/llm');

/**
 * @typedef {Object} TextMessage
 * @property {number} chat.id - ID —á–∞—Ç–∞
 * @property {string} text - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 * @property {Object} from - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ
 */

/**
 * @class TextMessageHandler
 * @description –ö–ª–∞—Å—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å LLM –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–µ–π
 * @example
 * const textHandler = new TextMessageHandler(bot);
 * if (textHandler.canHandle(message)) {
 *   textHandler.handleTextMessage(message);
 * }
 */
class TextMessageHandler {
  /**
   * @constructor
   * @param {Object} bot - –≠–∫–∑–µ–º–ø–ª—è—Ä Telegram –±–æ—Ç–∞
   * @throws {Error} –ï—Å–ª–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω
   */
  constructor(bot) {
    if (!bot) {
      throw new Error('–≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è TextMessageHandler');
    }
    
    this.bot = bot;
    this.router = null;
    this.isInitialized = false;
    
    console.log('üîß TextMessageHandler –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
  }

  /**
   * @group Initialization
   * @description –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏ —É–º–Ω—ã–π —Ä–æ—É—Ç–µ—Ä
   * @returns {Promise<boolean>} true –µ—Å–ª–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞
   */
  async initialize() {
    try {
      console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è TextMessageHandler...');
      
      // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è LLM
      const llmServiceConfig = this.buildLLMConfig();
      
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —É–º–Ω—ã–π —Ä–æ—É—Ç–µ—Ä
      this.router = new SmartRouter(llmServiceConfig, {
        enableLLMClassification: true,
        fallbackToPatterns: true,
        confidenceThreshold: 0.7
      });
      
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä
      await this.router.initialize();
      
      this.isInitialized = true;
      console.log('‚úÖ TextMessageHandler —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      
      return true;
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ TextMessageHandler:', error);
      
      // –°–æ–∑–¥–∞–µ–º fallback —Ä–æ—É—Ç–µ—Ä –±–µ–∑ LLM
      this.createFallbackRouter();
      return false;
    }
  }

  /**
   * @group Configuration
   * @description –°—Ç—Ä–æ–∏—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è LLM —Å–µ—Ä–≤–∏—Å–∞
   * @returns {Object} –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è LLM
   * @private
   */
  buildLLMConfig() {
    const provider = process.env.LLM_PROVIDER || llmConfig.defaultProvider;
    const providerConfig = llmConfig.providers[provider];
    
    if (!providerConfig) {
      throw new Error(`–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π LLM –ø—Ä–æ–≤–∞–π–¥–µ—Ä: ${provider}`);
    }
    
    // –ü–æ–ª—É—á–∞–µ–º API –∫–ª—é—á –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    const apiKey = this.getAPIKey(provider);
    
    return {
      apiKey: apiKey,
      apiUrl: providerConfig.apiUrl,
      model: providerConfig.model,
      maxTokens: providerConfig.maxTokens,
      temperature: providerConfig.temperature,
      timeout: providerConfig.timeout
    };
  }

  /**
   * @group Configuration
   * @description –ü–æ–ª—É—á–∞–µ—Ç API –∫–ª—é—á –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
   * @param {string} provider - –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
   * @returns {string} API –∫–ª—é—á
   * @private
   */
  getAPIKey(provider) {
    const keyMap = {
      'proxyApi': process.env.PROXYAPI_KEY
    };
    
    const apiKey = keyMap[provider];
    
    if (!apiKey) {
      throw new Error(`API –∫–ª—é—á –¥–ª—è –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ ${provider} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è`);
    }
    
    return apiKey;
  }

  /**
   * @group Fallback Configuration
   * @description –°–æ–∑–¥–∞–µ—Ç fallback —Ä–æ—É—Ç–µ—Ä –±–µ–∑ LLM
   * @private
   */
  createFallbackRouter() {
    try {
      console.log('‚ö†Ô∏è –°–æ–∑–¥–∞—é fallback —Ä–æ—É—Ç–µ—Ä –±–µ–∑ LLM...');
      
      // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π —Ä–æ—É—Ç–µ—Ä —Å –æ—Ç–∫–ª—é—á–µ–Ω–Ω–æ–π LLM –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–µ–π
      this.router = new SmartRouter({
        apiKey: 'fallback-key',
        apiUrl: process.env.PROXYAPI_URL || 'https://api.proxyapi.com/v1',
        model: process.env.PROXYAPI_MODEL || 'gpt-3.5-turbo',
        maxTokens: parseInt(process.env.PROXYAPI_MAX_TOKENS) || 1000,
        temperature: parseFloat(process.env.PROXYAPI_TEMPERATURE) || 0.7,
        timeout: parseInt(process.env.PROXYAPI_TIMEOUT) || 30000
      }, {
        enableLLMClassification: false,  // –û—Ç–∫–ª—é—á–∞–µ–º LLM –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—é
        fallbackToPatterns: true,        // –í–∫–ª—é—á–∞–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω-–º–∞—Ç—á–∏–Ω–≥
        confidenceThreshold: 0.5
      });
      
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º fallback —Ä–æ—É—Ç–µ—Ä
      this.router.initialize().then(() => {
        console.log('‚úÖ Fallback —Ä–æ—É—Ç–µ—Ä —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        this.isInitialized = true;
      }).catch(error => {
        console.warn('‚ö†Ô∏è Fallback —Ä–æ—É—Ç–µ—Ä –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω:', error.message);
        // –°–æ–∑–¥–∞–µ–º –µ—â–µ –±–æ–ª–µ–µ –ø—Ä–æ—Å—Ç–æ–π —Ä–æ—É—Ç–µ—Ä
        this.createSimpleRouter();
      });
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è fallback —Ä–æ—É—Ç–µ—Ä–∞:', error);
      // –°–æ–∑–¥–∞–µ–º –µ—â–µ –±–æ–ª–µ–µ –ø—Ä–æ—Å—Ç–æ–π —Ä–æ—É—Ç–µ—Ä
      this.createSimpleRouter();
    }
  }

  /**
   * @group Fallback Configuration
   * @description –°–æ–∑–¥–∞–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–æ—Å—Ç–æ–π —Ä–æ—É—Ç–µ—Ä –±–µ–∑ –≤–Ω–µ—à–Ω–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
   * @private
   */
  createSimpleRouter() {
    try {
      console.log('üîÑ –°–æ–∑–¥–∞—é –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–æ—Å—Ç–æ–π —Ä–æ—É—Ç–µ—Ä...');
      
      // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç-—Ä–æ—É—Ç–µ—Ä —Å –±–∞–∑–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é
      this.router = {
        name: 'Simple Fallback Router',
        isReady: () => true,
        processText: async (text, context) => {
          console.log('üìù –ü—Ä–æ—Å—Ç–æ–π —Ä–æ—É—Ç–µ—Ä –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç:', text);
          
          // –ü—Ä–æ—Å—Ç—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –±–µ–∑ LLM
          if (/(–ø—Ä–∏–≤–µ—Ç|–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π|hi|hello)/i.test(text)) {
            return '–ü—Ä–∏–≤–µ—Ç! –Ø –ø—Ä–æ—Å—Ç–æ–π –±–æ—Ç –±–µ–∑ LLM. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?';
          }
          
          if (/(–∫–∞–∫ –¥–µ–ª–∞|–∫–∞–∫ —Ç—ã|how are you)/i.test(text)) {
            return '–°–ø–∞—Å–∏–±–æ, —É –º–µ–Ω—è –≤—Å–µ —Ö–æ—Ä–æ—à–æ! –Ø —Ä–∞–±–æ—Ç–∞—é –≤ –ø—Ä–æ—Å—Ç–æ–º —Ä–µ–∂–∏–º–µ.';
          }
          
          if (/(—Å–ø–∞—Å–∏–±–æ|–±–ª–∞–≥–æ–¥–∞—Ä—é|thanks)/i.test(text)) {
            return '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞! –†–∞–¥ –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω—ã–º.';
          }
          
          return '–ü–æ–ª—É—á–∏–ª –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ! –Ø —Ä–∞–±–æ—Ç–∞—é –≤ –ø—Ä–æ—Å—Ç–æ–º —Ä–µ–∂–∏–º–µ –±–µ–∑ LLM.';
        }
      };
      
      this.isInitialized = true;
      console.log('‚úÖ –ü—Ä–æ—Å—Ç–æ–π —Ä–æ—É—Ç–µ—Ä —Å–æ–∑–¥–∞–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Å—Ç–æ–≥–æ —Ä–æ—É—Ç–µ—Ä–∞:', error);
      // –í –∫—Ä–∞–π–Ω–µ–º —Å–ª—É—á–∞–µ —Å–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
      this.createStubRouter();
    }
  }

  /**
   * @group Fallback Configuration
   * @description –°–æ–∑–¥–∞–µ—Ç –∑–∞–≥–ª—É—à–∫—É —Ä–æ—É—Ç–µ—Ä–∞ –≤ —Å–ª—É—á–∞–µ –ø–æ–ª–Ω–æ–≥–æ –æ—Ç–∫–∞–∑–∞
   * @private
   */
  createStubRouter() {
    console.log('üÜò –°–æ–∑–¥–∞—é –∑–∞–≥–ª—É—à–∫—É —Ä–æ—É—Ç–µ—Ä–∞...');
    
    this.router = {
      name: 'Stub Router',
      isReady: () => true,
      processText: async (text, context) => {
        console.log('üìù –ó–∞–≥–ª—É—à–∫–∞ —Ä–æ—É—Ç–µ—Ä–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç:', text);
        return '–ò–∑–≤–∏–Ω–∏—Ç–µ, —É –º–µ–Ω—è –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π —Å–æ–æ–±—â–µ–Ω–∏–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.';
      }
    };
    
    this.isInitialized = true;
    console.log('‚úÖ –ó–∞–≥–ª—É—à–∫–∞ —Ä–æ—É—Ç–µ—Ä–∞ —Å–æ–∑–¥–∞–Ω–∞');
  }

  /**
   * @group Message Processing
   * @description –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   * @param {TextMessage} msg - –û–±—ä–µ–∫—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
   * @returns {Promise<boolean>} true –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ, false –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
   */
  async handleTextMessage(msg) {
    try {
      const chatId = msg.chat.id;
      const text = msg.text;
      
      console.log(`üìù –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —á–∞—Ç–∞ ${chatId}: "${text}"`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–æ–π
      if (this.isCommand(text)) {
        console.log('‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ —è–≤–ª—è–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–æ–π, –ø—Ä–æ–ø—É—Å–∫–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É');
        return false;
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
      if (!this.isInitialized && this.router) {
        console.log('üîÑ –†–æ—É—Ç–µ—Ä –µ—â–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è, –∂–¥–µ–º...');
        await this.waitForInitialization();
      }
      
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç —á–µ—Ä–µ–∑ —É–º–Ω—ã–π —Ä–æ—É—Ç–µ—Ä
      const response = await this.processTextWithRouter(text, msg);
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      await this.sendResponse(chatId, response);
      
      console.log(`‚úÖ –¢–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –¥–ª—è —á–∞—Ç–∞ ${chatId}`);
      return true;
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
      await this.sendErrorMessage(msg.chat.id);
      return false;
    }
  }

  /**
   * @group Message Validation
   * @description –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –º–æ–∂–µ—Ç –ª–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –¥–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
   * @param {Object} msg - –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç Telegram
   * @returns {boolean} true –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –º–æ–∂–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å, false –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
   */
  canHandle(msg) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏ —á—Ç–æ —ç—Ç–æ –Ω–µ –∫–æ–º–∞–Ω–¥–∞
    return msg.text && !this.isCommand(msg.text);
  }

  /**
   * @group Message Validation
   * @description –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—Å—Ç –∫–æ–º–∞–Ω–¥–æ–π
   * @param {string} text - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
   * @returns {boolean} true –µ—Å–ª–∏ —ç—Ç–æ –∫–æ–º–∞–Ω–¥–∞, false –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
   * @private
   */
  isCommand(text) {
    return text.startsWith('/');
  }

  /**
   * @group Initialization Waiting
   * @description –ñ–¥–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–æ—É—Ç–µ—Ä–∞
   * @returns {Promise<void>}
   * @private
   */
  async waitForInitialization() {
    const maxWaitTime = 10000; // 10 —Å–µ–∫—É–Ω–¥
    const checkInterval = 100; // 100 –º—Å
    let waitedTime = 0;
    
    while (!this.isInitialized && waitedTime < maxWaitTime) {
      await new Promise(resolve => setTimeout(resolve, checkInterval));
      waitedTime += checkInterval;
    }
    
    if (!this.isInitialized) {
      console.warn('‚ö†Ô∏è –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–æ—É—Ç–µ—Ä–∞');
    }
  }

  /**
   * @group Text Processing
   * @description –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç —á–µ—Ä–µ–∑ —É–º–Ω—ã–π —Ä–æ—É—Ç–µ—Ä
   * @param {string} text - –¢–µ–∫—Å—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
   * @param {Object} msg - –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
   * @returns {Promise<string>} –û—Ç–≤–µ—Ç –æ—Ç —Ä–æ—É—Ç–µ—Ä–∞
   * @private
   */
  async processTextWithRouter(text, msg) {
    try {
      if (!this.router) {
        throw new Error('–†–æ—É—Ç–µ—Ä –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å —Ä–æ—É—Ç–µ—Ä–∞
      if (typeof this.router.isReady === 'function') {
        const routerReady = this.router.isReady();
        console.log(`üîç Router ready check: ${routerReady}`);
        
        if (!routerReady) {
          console.log('‚ö†Ô∏è –†–æ—É—Ç–µ—Ä –Ω–µ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ, –ø—Ä–æ–≤–µ—Ä—è—é –¥–µ—Ç–∞–ª–∏...');
          console.log('üîç Router info:', this.router.getInfo ? this.router.getInfo() : 'getInfo not available');
          throw new Error('–†–æ—É—Ç–µ—Ä –Ω–µ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');
        }
      } else {
        console.log('‚ö†Ô∏è –†–æ—É—Ç–µ—Ä –Ω–µ –∏–º–µ–µ—Ç –º–µ—Ç–æ–¥–∞ isReady');
      }
      
      // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏
      const context = this.buildMessageContext(msg);
      
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç —á–µ—Ä–µ–∑ —Ä–æ—É—Ç–µ—Ä
      const response = await this.router.processText(text, context);
      
      if (!response) {
        throw new Error('–†–æ—É—Ç–µ—Ä –Ω–µ –≤–µ—Ä–Ω—É–ª –æ—Ç–≤–µ—Ç');
      }
      
      return response;
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞ —á–µ—Ä–µ–∑ —Ä–æ—É—Ç–µ—Ä:', error);
      
      // –ï—Å–ª–∏ —Ä–æ—É—Ç–µ—Ä –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º fallback –æ—Ç–≤–µ—Ç
      return this.getDefaultResponse(text);
    }
  }

  /**
   * @group Context Building
   * @description –°—Ç—Ä–æ–∏—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è LLM –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏
   * @param {Object} msg - –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
   * @returns {Object} –ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏
   * @private
   */
  buildMessageContext(msg) {
    const context = {
      timestamp: new Date().toISOString(),
      chatType: msg.chat.type,
      userId: msg.from?.id,
      username: msg.from?.username,
      firstName: msg.from?.first_name,
      lastName: msg.from?.last_name
    };
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞
    if (this.userHistory && this.userHistory[msg.from?.id]) {
      context.userHistory = this.userHistory[msg.from?.id].slice(-5); // –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å–æ–æ–±—â–µ–Ω–∏–π
    }
    
    return context;
  }

  /**
   * @group Response Handling
   * @description –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
   * @param {number} chatId - ID —á–∞—Ç–∞
   * @param {string} response - –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞
   * @returns {Promise<void>}
   * @private
   */
  async sendResponse(chatId, response) {
    try {
      await this.bot.sendMessage(chatId, response, {
        parse_mode: 'HTML',
        disable_web_page_preview: true
      });
      
      console.log(`üì§ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —á–∞—Ç ${chatId}`);
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞:', error);
      throw error;
    }
  }

  /**
   * @group Error Handling
   * @description –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
   * @param {number} chatId - ID —á–∞—Ç–∞
   * @returns {Promise<void>}
   * @private
   */
  async sendErrorMessage(chatId) {
    try {
      const errorMessage = '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.';
      await this.bot.sendMessage(chatId, errorMessage);
    } catch (sendError) {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ:', sendError);
    }
  }

  /**
   * @group Fallback Responses
   * @description –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –µ—Å–ª–∏ —Ä–æ—É—Ç–µ—Ä –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª
   * @param {string} text - –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   * @returns {string} –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç
   * @private
   */
  getDefaultResponse(text) {
    return `üìù –í—ã –Ω–∞–ø–∏—Å–∞–ª–∏: "<b>${this.escapeHtml(text)}</b>"\n\n` +
           `üí° –≠—Ç–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç. –£–º–Ω—ã–π —Ä–æ—É—Ç–µ—Ä –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.`;
  }

  /**
   * @group Utility Methods
   * @description –≠–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç HTML-—Å–∏–º–≤–æ–ª—ã –≤ —Ç–µ–∫—Å—Ç–µ
   * @param {string} text - –¢–µ–∫—Å—Ç –¥–ª—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
   * @returns {string} –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
   * @private
   */
  escapeHtml(text) {
    const htmlEscapes = {
      '&': '&amp;',
      '<': '&lt;',
      '>': '&gt;',
      '"': '&quot;',
      "'": '&#39;'
    };
    
    return text.replace(/[&<>"']/g, match => htmlEscapes[match]);
  }

  /**
   * @group Accessors
   * @description –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–¥—É–ª–µ —Ä–æ—É—Ç–µ—Ä–∞
   * @returns {Object} –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–¥—É–ª–µ
   */
  getModuleInfo() {
    try {
      if (this.router) {
        return this.router.getInfo();
      }
      
      return {
        name: '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –º–æ–¥—É–ª—å',
        description: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞',
        version: '0.0.0'
      };
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–æ–¥—É–ª–µ:', error);
      return {
        name: '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –º–æ–¥—É–ª—å',
        description: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞',
        version: '0.0.0'
      };
    }
  }

  /**
   * @group Accessors
   * @description –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
   * @returns {Object} –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
   */
  getStats() {
    const stats = {
      handlerName: 'TextMessageHandler',
      isInitialized: this.isInitialized,
      canHandleCommands: false,
      supportsHtml: true
    };
    
    if (this.router) {
      try {
        const routerStats = this.router.getStats();
        const classifierInfo = this.router.getClassifierInfo();
        const llmInfo = this.router.getLLMInfo();
        
        stats.router = {
          ...routerStats,
          classifier: classifierInfo,
          llm: llmInfo
        };
      } catch (error) {
        console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–æ—É—Ç–µ—Ä–∞:', error.message);
        stats.router = '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞';
      }
    }
    
    return stats;
  }

  /**
   * @group Accessors
   * @description –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
   * @returns {boolean} true –µ—Å–ª–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω
   */
  isReady() {
    return this.isInitialized && this.router !== null;
  }
}

module.exports = TextMessageHandler;
