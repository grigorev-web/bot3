class EventHandlers {
  constructor(bot) {
    this.bot = bot;
    this.startTime = new Date();
  }

  handlePollingError(error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª–ª–∏–Ω–≥–∞:', error);
    console.error('‚è∞ –í—Ä–µ–º—è –æ—à–∏–±–∫–∏:', new Date().toISOString());
  }

  handlePollingStart() {
    const uptime = process.uptime();
    console.log('ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø–æ–ª–ª–∏–Ω–≥...');
    console.log('üì± –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');
    console.log('‚è∞ –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞:', this.startTime.toLocaleString('ru-RU'));
    console.log('üîÑ PID –ø—Ä–æ—Ü–µ—Å—Å–∞:', process.pid);
    console.log('üíæ –í–µ—Ä—Å–∏—è Node.js:', process.version);
  }

  handlePollingStop() {
    const uptime = process.uptime();
    console.log('üõë –ü–æ–ª–ª–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    console.log('‚è±Ô∏è –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:', Math.floor(uptime / 60), '–º–∏–Ω', Math.floor(uptime % 60), '—Å–µ–∫');
  }

  handleWebhookError(error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ webhook:', error);
  }

  handleError(error) {
    console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞ –±–æ—Ç–∞:', error);
    console.error('üìÅ –§–∞–π–ª:', error.fileName || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ');
    console.error('üìç –°—Ç—Ä–æ–∫–∞:', error.lineNumber || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ');
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è graceful shutdown
  handleGracefulShutdown() {
    console.log('üîÑ –í—ã–ø–æ–ª–Ω—è—é graceful shutdown...');
    this.handlePollingStop();
  }
}

module.exports = EventHandlers;
