/**
 * @fileoverview –ú–æ–¥—É–ª—å —Ä–æ—É—Ç–∏–Ω–≥–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
 * @description –ü—Ä–æ—Å—Ç–æ–π —Ä–æ—É—Ç–µ—Ä –¥–ª—è –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
 * @author Telegram Bot Team
 * @version 1.0.0
 * @since 2024-01-01
 */

/**
 * @typedef {Object} RouteRule
 * @property {string|RegExp} pattern - –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è
 * @property {Function} handler - –§—É–Ω–∫—Ü–∏—è-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫
 * @property {string} description - –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞
 * @property {number} priority - –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –ø—Ä–∞–≤–∏–ª–∞ (—á–µ–º –≤—ã—à–µ, —Ç–µ–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–µ–µ)
 */

/**
 * @typedef {Object} RouterStats
 * @property {number} totalRequests - –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤
 * @property {number} matchedRequests - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–≤–ø–∞–≤—à–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
 * @property {number} unmatchedRequests - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ—Å–æ–≤–ø–∞–≤—à–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
 * @property {Date} lastRequest - –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
 */

/**
 * @class Router
 * @description –ü—Ä–æ—Å—Ç–æ–π –º–æ–¥—É–ª—å —Ä–æ—É—Ç–∏–Ω–≥–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
 * @example
 * const router = new Router();
 * router.addRule(/–ø—Ä–∏–≤–µ—Ç/i, (text) => '–ü—Ä–∏–≤–µ—Ç!', '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ', 1);
 * const response = await router.processText('–ü—Ä–∏–≤–µ—Ç, –∫–∞–∫ –¥–µ–ª–∞?');
 */
class Router {
  /**
   * @constructor
   * @description –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ä–æ—É—Ç–µ—Ä —Å –±–∞–∑–æ–≤—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
   */
  constructor() {
    this.name = 'Text Router Module';
    this.version = '1.0.0';
    this.routes = [];
    this.stats = this.initializeStats();
    this.defaultHandler = this.createDefaultHandler();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–µ –ø—Ä–∞–≤–∏–ª–∞
    this.initializeDefaultRoutes();
    
    console.log('üîß Router –º–æ–¥—É–ª—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
  }

  /**
   * @group Statistics Initialization
   * @description –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–æ—É—Ç–µ—Ä–∞
   * @returns {RouterStats} –ù–∞—á–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
   * @private
   */
  initializeStats() {
    return {
      totalRequests: 0,
      matchedRequests: 0,
      unmatchedRequests: 0,
      lastRequest: null
    };
  }

  /**
   * @group Default Routes
   * @description –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –±–∞–∑–æ–≤—ã–µ –ø—Ä–∞–≤–∏–ª–∞ —Ä–æ—É—Ç–∏–Ω–≥–∞
   * @private
   */
  initializeDefaultRoutes() {
    // –ü—Ä–∞–≤–∏–ª–æ –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–π
    this.addRule(
      /(–ø—Ä–∏–≤–µ—Ç|–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π|hi|hello)/i,
      (text) => this.generateGreetingResponse(text),
      '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ',
      1
    );

    // –ü—Ä–∞–≤–∏–ª–æ –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤
    this.addRule(
      /(–∫–∞–∫ –¥–µ–ª–∞|–∫–∞–∫ —Ç—ã|–∫–∞–∫ –∂–∏–∑–Ω—å|how are you)/i,
      (text) => this.generateStatusResponse(text),
      '–í–æ–ø—Ä–æ—Å –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏',
      2
    );

    // –ü—Ä–∞–≤–∏–ª–æ –¥–ª—è –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏
    this.addRule(
      /(—Å–ø–∞—Å–∏–±–æ|–±–ª–∞–≥–æ–¥–∞—Ä—é|thanks|thank you)/i,
      (text) => this.generateThanksResponse(text),
      '–ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å',
      1
    );

    console.log('‚úÖ –ë–∞–∑–æ–≤—ã–µ –ø—Ä–∞–≤–∏–ª–∞ —Ä–æ—É—Ç–∏–Ω–≥–∞ –¥–æ–±–∞–≤–ª–µ–Ω—ã');
  }

  /**
   * @group Route Management
   * @description –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ–µ –ø—Ä–∞–≤–∏–ª–æ —Ä–æ—É—Ç–∏–Ω–≥–∞
   * @param {string|RegExp} pattern - –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è
   * @param {Function} handler - –§—É–Ω–∫—Ü–∏—è-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫
   * @param {string} description - –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞
   * @param {number} [priority=0] - –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –ø—Ä–∞–≤–∏–ª–∞
   */
  addRule(pattern, handler, description, priority = 0) {
    if (!pattern || typeof handler !== 'function') {
      throw new Error('–ü–∞—Ç—Ç–µ—Ä–Ω –∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞');
    }

    const route = {
      pattern,
      handler,
      description: description || '–ù–µ–æ–ø–∏—Å–∞–Ω–Ω–æ–µ –ø—Ä–∞–≤–∏–ª–æ',
      priority: priority || 0,
      createdAt: new Date()
    };

    this.routes.push(route);
    
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø—Ä–∞–≤–∏–ª–∞ –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É (–≤—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç —Å–Ω–∞—á–∞–ª–∞)
    this.routes.sort((a, b) => b.priority - a.priority);
    
    console.log(`‚úÖ –ü—Ä–∞–≤–∏–ª–æ "${description}" –¥–æ–±–∞–≤–ª–µ–Ω–æ —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º ${priority}`);
  }

  /**
   * @group Text Processing
   * @description –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –ø—Ä–∞–≤–∏–ª–∞ —Ä–æ—É—Ç–∏–Ω–≥–∞
   * @param {string} text - –¢–µ–∫—Å—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
   * @returns {Promise<string>} –û—Ç–≤–µ—Ç –æ—Ç –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
   */
  async processText(text) {
    try {
      if (!text || typeof text !== 'string') {
        throw new Error('–¢–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ–ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–æ–π');
      }

      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
      this.updateStats();
      
      console.log(`üìù –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ç–µ–∫—Å—Ç: "${text}"`);
      
      // –ò—â–µ–º –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –ø—Ä–∞–≤–∏–ª–æ
      const matchedRoute = this.findMatchingRoute(text);
      
      if (matchedRoute) {
        console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø—Ä–∞–≤–∏–ª–æ: "${matchedRoute.description}"`);
        this.stats.matchedRequests++;
        
        // –í—ã–ø–æ–ª–Ω—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        const response = await this.executeHandler(matchedRoute, text);
        return response || '–û—Ç–≤–µ—Ç –Ω–µ –ø–æ–ª—É—á–µ–Ω';
      }
      
      // –ï—Å–ª–∏ –ø—Ä–∞–≤–∏–ª–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      console.log('‚ö†Ô∏è –ü–æ–¥—Ö–æ–¥—è—â–µ–µ –ø—Ä–∞–≤–∏–ª–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É—é –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é');
      this.stats.unmatchedRequests++;
      
      return this.defaultHandler(text);
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞:', error);
      return this.getErrorResponse(error);
    }
  }

  /**
   * @group Route Matching
   * @description –ù–∞—Ö–æ–¥–∏—Ç –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –ø—Ä–∞–≤–∏–ª–æ –¥–ª—è —Ç–µ–∫—Å—Ç–∞
   * @param {string} text - –¢–µ–∫—Å—Ç –¥–ª—è —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è
   * @returns {RouteRule|null} –ü–æ–¥—Ö–æ–¥—è—â–µ–µ –ø—Ä–∞–≤–∏–ª–æ –∏–ª–∏ null
   * @private
   */
  findMatchingRoute(text) {
    for (const route of this.routes) {
      try {
        if (this.matchesPattern(route.pattern, text)) {
          return route;
        }
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤–∏–ª–∞ "${route.description}":`, error);
      }
    }
    return null;
  }

  /**
   * @group Pattern Matching
   * @description –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–µ–∫—Å—Ç –ø–∞—Ç—Ç–µ—Ä–Ω—É
   * @param {string|RegExp} pattern - –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
   * @param {string} text - –¢–µ–∫—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
   * @returns {boolean} true –µ—Å–ª–∏ —Ç–µ–∫—Å—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–∞—Ç—Ç–µ—Ä–Ω—É
   * @private
   */
  matchesPattern(pattern, text) {
    if (pattern instanceof RegExp) {
      return pattern.test(text);
    } else if (typeof pattern === 'string') {
      return text.toLowerCase().includes(pattern.toLowerCase());
    }
    return false;
  }

  /**
   * @group Handler Execution
   * @description –í—ã–ø–æ–ª–Ω—è–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–∞–≤–∏–ª–∞
   * @param {RouteRule} route - –ü—Ä–∞–≤–∏–ª–æ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
   * @param {string} text - –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
   * @returns {Promise<string>} –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏
   * @private
   */
  async executeHandler(route, text) {
    try {
      const result = await route.handler(text);
      
      if (typeof result === 'string') {
        return result;
      } else if (result && typeof result === 'object') {
        return JSON.stringify(result);
      } else {
        return String(result);
      }
      
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ "${route.description}":`, error);
      throw error;
    }
  }

  /**
   * @group Default Handlers
   * @description –°–æ–∑–¥–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
   * @returns {Function} –§—É–Ω–∫—Ü–∏—è-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
   * @private
   */
  createDefaultHandler() {
    return (text) => {
      return `üìù –í—ã –Ω–∞–ø–∏—Å–∞–ª–∏: "${this.escapeHtml(text)}"\n\n` +
             `üí° –≠—Ç–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –º–æ–¥—É–ª—è —Ä–æ—É—Ç–∏–Ω–≥–∞.`;
    };
  }

  /**
   * @group Response Generation
   * @description –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
   * @param {string} text - –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
   * @returns {string} –û—Ç–≤–µ—Ç –Ω–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
   * @private
   */
  generateGreetingResponse(text) {
    const greetings = [
      '–ü—Ä–∏–≤–µ—Ç! üëã –ö–∞–∫ –¥–µ–ª–∞?',
      '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! üòä –†–∞–¥ –≤–∞—Å –≤–∏–¥–µ—Ç—å!',
      '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! üéâ –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?',
      '–î–æ–±—Ä—ã–π –¥–µ–Ω—å! ‚òÄÔ∏è –ö–∞–∫ –≤–∞—à–∏ –¥–µ–ª–∞?'
    ];
    
    return greetings[Math.floor(Math.random() * greetings.length)];
  }

  /**
   * @group Response Generation
   * @description –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
   * @param {string} text - –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
   * @returns {string} –û—Ç–≤–µ—Ç –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
   * @private
   */
  generateStatusResponse(text) {
    const responses = [
      '–£ –º–µ–Ω—è –≤—Å–µ –æ—Ç–ª–∏—á–Ω–æ! üòä –°–ø–∞—Å–∏–±–æ, —á—Ç–æ —Å–ø—Ä–æ—Å–∏–ª–∏!',
      '–í—Å–µ —Ö–æ—Ä–æ—à–æ! üöÄ –ì–æ—Ç–æ–≤ –ø–æ–º–æ–≥–∞—Ç—å –∏ –æ–±—â–∞—Ç—å—Å—è!',
      '–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ! ‚ú® –ö–∞–∫ —É –≤–∞—Å –¥–µ–ª–∞?',
      '–û—Ç–ª–∏—á–Ω–æ! üåü –†–∞–±–æ—Ç–∞—é –±–µ–∑ —Å–±–æ–µ–≤!'
    ];
    
    return responses[Math.floor(Math.random() * responses.length)];
  }

  /**
   * @group Response Generation
   * @description –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å
   * @param {string} text - –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
   * @returns {string} –û—Ç–≤–µ—Ç –Ω–∞ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å
   * @private
   */
  generateThanksResponse(text) {
    const responses = [
      '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞! üòä –†–∞–¥ –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω—ã–º!',
      '–ù–µ –∑–∞ —á—Ç–æ! üåü –í—Å–µ–≥–¥–∞ –∫ –≤–∞—à–∏–º —É—Å–ª—É–≥–∞–º!',
      '–û–±—Ä–∞—â–∞–π—Ç–µ—Å—å! üéØ –ë—É–¥—É —Ä–∞–¥ –ø–æ–º–æ—á—å —Å–Ω–æ–≤–∞!',
      '–†–∞–¥ —Å—Ç–∞—Ä–∞—Ç—å—Å—è! ‚ú® –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ!'
    ];
    
    return responses[Math.floor(Math.random() * responses.length)];
  }

  /**
   * @group Error Handling
   * @description –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –æ–± –æ—à–∏–±–∫–µ
   * @param {Error} error - –û–±—ä–µ–∫—Ç –æ—à–∏–±–∫–∏
   * @returns {string} –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
   * @private
   */
  getErrorResponse(error) {
    return `‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:\n` +
           `üîç ${error.message}\n\n` +
           `üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.`;
  }

  /**
   * @group Utility Methods
   * @description –≠–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç HTML-—Å–∏–º–≤–æ–ª—ã –≤ —Ç–µ–∫—Å—Ç–µ
   * @param {string} text - –¢–µ–∫—Å—Ç –¥–ª—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
   * @returns {string} –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
   * @private
   */
  escapeHtml(text) {
    const htmlEscapes = {
      '&': '&amp;',
      '<': '&lt;',
      '>': '&gt;',
      '"': '&quot;',
      "'": '&#39;'
    };
    
    return text.replace(/[&<>"']/g, match => htmlEscapes[match]);
  }

  /**
   * @group Statistics Management
   * @description –û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–æ—É—Ç–µ—Ä–∞
   * @private
   */
  updateStats() {
    this.stats.totalRequests++;
    this.stats.lastRequest = new Date();
  }

  /**
   * @group Accessors
   * @description –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–¥—É–ª–µ
   * @returns {Object} –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–¥—É–ª–µ
   */
  getInfo() {
    return {
      name: this.name,
      description: '–ü—Ä–æ—Å—Ç–æ–π –º–æ–¥—É–ª—å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π',
      version: this.version,
      routesCount: this.routes.length,
      stats: this.getStats()
    };
  }

  /**
   * @group Accessors
   * @description –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–æ—É—Ç–µ—Ä–∞
   * @returns {RouterStats} –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–æ—É—Ç–µ—Ä–∞
   */
  getStats() {
    return { ...this.stats };
  }

  /**
   * @group Accessors
   * @description –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–∞–≤–∏–ª
   * @returns {Array<RouteRule>} –ú–∞—Å—Å–∏–≤ –ø—Ä–∞–≤–∏–ª
   */
  getRoutes() {
    return this.routes.map(route => ({
      ...route,
      createdAt: route.createdAt.toISOString()
    }));
  }

  /**
   * @group Accessors
   * @description –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∞–≤–∏–ª
   * @returns {number} –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∞–≤–∏–ª
   */
  getRoutesCount() {
    return this.routes.length;
  }

  /**
   * @group Accessors
   * @description –û—á–∏—â–∞–µ—Ç –≤—Å–µ –ø—Ä–∞–≤–∏–ª–∞ —Ä–æ—É—Ç–∏–Ω–≥–∞
   */
  clearRoutes() {
    this.routes = [];
    console.log('üóëÔ∏è –í—Å–µ –ø—Ä–∞–≤–∏–ª–∞ —Ä–æ—É—Ç–∏–Ω–≥–∞ –æ—á–∏—â–µ–Ω—ã');
  }
}

module.exports = Router;
