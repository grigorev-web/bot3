/**
 * @fileoverview –ü—Ä–æ—Å—Ç–æ–π —Ä–æ—É—Ç–µ—Ä —Å LLM
 * @description –°–æ–∑–¥–∞–µ—Ç LLM —Å–µ—Ä–≤–∏—Å, –¥–µ–ª–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç–≤–µ—Ç
 * @author Telegram Bot Team
 * @version 4.1.0
 * @since 2024-01-01
 */

const { LLMService } = require('../../services/llm');
const { Context } = require('../context');
const { Validator } = require('../validator');

class Router {
  constructor(bot, msg) {
    this.bot = bot;
    this.msg = msg;
    this.answer = null;
    this.context = null;
    this.validator = new Validator();
  }

  /**
   * @group Status Updates
   * @description –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å "–±–æ—Ç –ø–µ—á–∞—Ç–∞–µ—Ç..." –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
   * @private
   */
  async sendTypingStatus() {
    try {
      console.log('‚å®Ô∏è –û—Ç–ø—Ä–∞–≤–ª—è—é —Å—Ç–∞—Ç—É—Å "–±–æ—Ç –ø–µ—á–∞—Ç–∞–µ—Ç..."');
      await this.bot.sendChatAction(this.msg.chat.id, 'typing');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –ø–µ—á–∞—Ç–∏:', error);
    }
  }

  async run() {

    // 0. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å "–±–æ—Ç –ø–∏—à–µ—Ç..."
    await this.sendTypingStatus();

    // 1. –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç (–∏—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –∏ —Ç–¥)
    this.addContext();

    // 2. –í–∞–ª–∏–¥–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    this.validate();

    // 3. –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç LLM
    await this.getAnswerFromLLM();

    // 4. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await this.sendAnswer();
  }

  /**
   * @group Context Management
   * @description –î–æ–±–∞–≤–ª—è–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç –∫ —Å–æ–æ–±—â–µ–Ω–∏—é
   * @private
   */
  addContext() {
    const context = new Context();
    this.context = context.getContext();
    this.msg.context = this.context;
  }

  validate() {
    this.validator.validateTelegramMessage(this.msg);
  }

  /**
   * @group LLM Integration
   * @description –ü–æ–ª—É—á–∞–µ—Ç –æ—Ç–≤–µ—Ç –æ—Ç LLM —Å–µ—Ä–≤–∏—Å–∞
   * @private
   */
  async getAnswerFromLLM() {
    try {
      const llmService = new LLMService();
      const response = await llmService.generateResponse(this.msg.text);
      
      if (response && response.content) {
        this.answer = response.content;
        console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç LLM');
      } else {
        console.log('‚ö†Ô∏è LLM –Ω–µ –¥–∞–ª –æ—Ç–≤–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É—é fallback');
        this.answer = this.getDefaultResponse(this.msg.text);
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç LLM:', error);
      this.answer = this.getErrorResponse(error);
    }
  }

  /**
   * @group Response Processing
   * @description –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —á–µ—Ä–µ–∑ Telegram –±–æ—Ç–∞
   * @private
   */
  async sendAnswer() {
    try {
      if (!this.answer) {
        this.answer = this.getDefaultResponse(this.msg.text);
      }
      
      console.log(`üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${this.msg.from?.id}: "${this.answer}"`);
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–æ—Ç –∂–µ —á–∞—Ç, –æ—Ç–∫—É–¥–∞ –ø—Ä–∏—à–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
      await this.bot.sendMessage(this.msg.chat.id, this.answer, {
        reply_to_message_id: this.msg.message_id,
        parse_mode: 'HTML'
      });
      
      console.log('‚úÖ –û—Ç–≤–µ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω');
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞:', error);
      // –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
      try {
        await this.bot.sendMessage(this.msg.chat.id, 
          '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.', {
          reply_to_message_id: this.msg.message_id
        });
      } catch (sendError) {
        console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ:', sendError);
      }
    }
  }

  /**
   * @group Fallback Responses
   * @description –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –µ—Å–ª–∏ LLM –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
   * @param {string} text - –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   * @returns {string} –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç
   * @private
   */
  getDefaultResponse(text) {
    return `üìù –í—ã –Ω–∞–ø–∏—Å–∞–ª–∏: "${text}"\n\nüí° LLM —Å–µ—Ä–≤–∏—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.`;
  }

  /**
   * @group Error Handling
   * @description –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
   * @param {Error} error - –û–±—ä–µ–∫—Ç –æ—à–∏–±–∫–∏
   * @returns {string} –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
   * @private
   */
  getErrorResponse(error) {
    return `‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:\nüîç ${error.message}\n\nüí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.`;
  }
}

module.exports = Router;
